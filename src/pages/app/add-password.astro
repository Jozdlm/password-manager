---
import { Button, buttonVariants } from "@/components/ui/button";
import Layout from "../../layouts/Layout.astro";
import { actions } from "astro:actions";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { isInputError } from "astro:actions";

const result = Astro.getActionResult(actions.addPassword);
if (result && !result.error) {
  return Astro.redirect("/");
}

const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<Layout title="Password Manager">
  <Card className="w-full mx-auto max-w-[400px]">
    <CardHeader>
      <CardTitle>Nueva Contraseña</CardTitle>
    </CardHeader>
    <CardContent>
      <form method="post" action={actions.addPassword} autocomplete="off">
        <div class="grid w-full max-w-sm items-center gap-1.5 mb-6">
          <Label htmlFor="website">Sitio Web</Label>
          <Input
            type="text"
            placeholder="example.com"
            id="website"
            name="url"
          />
          {
            inputErrors.url && (
              <p class="dark:text-red-400 text-sm">
                {inputErrors.url.join(",")}
              </p>
            )
          }
        </div>
        <div class="grid w-full max-w-sm items-center gap-1.5 mb-6">
          <Label htmlFor="username">Usuario</Label>
          <Input type="text" id="username" name="username" />
          {
            inputErrors.username && (
              <p class="dark:text-red-400 text-sm">
                {inputErrors.username.join(",")}
              </p>
            )
          }
        </div>
        <div class="grid w-full max-w-sm items-center gap-1.5 mb-6 relative">
          <div class="relative">
            <Label htmlFor="password">Contraseña</Label>
            <Input type="password" id="password" name="password" />
            {
              inputErrors.password && (
                <p class="dark:text-red-400 text-sm">
                  {inputErrors.password.join(",")}
                </p>
              )
            }
          </div>
          <button
            type="button"
            class="text-sm absolute right-2"
            class:list={[
              { "bottom-7": inputErrors.password },
              { "bottom-2.5": !inputErrors.password },
            ]}
            id="showPasswordBtn">Mostrar</button
          >
        </div>
        <div class="grid w-full max-w-sm items-center gap-1.5 mb-6">
          <Label htmlFor="note">Nota (Opcional)</Label>
          <Textarea
            placeholder="Escribe tus anotaciones aquí!"
            name="note"
            id="note"
          />
          {
            inputErrors.note && (
              <p class="dark:text-red-400 text-sm">
                {inputErrors.note.join(",")}
              </p>
            )
          }
        </div>
        <div class="flex justify-end gap-x-2">
          <a href="/" class={buttonVariants({ variant: "ghost" })}>Cancelar</a>
          <Button type="submit" variant={"primary"}> Agregar </Button>
        </div>
      </form>
      {
        result?.error && !isInputError(result.error) && (
          <p class="dark:text-red-400 text-sm mb-6 text-center">
            Hemos tenido problemas para agregar una nueva contraseña. Por favor
            inténtalo más tarde!
          </p>
        )
      }
    </CardContent>
  </Card>
</Layout>

<script>
  const passwordInput = document.getElementById("password") as HTMLInputElement;
  const showPasswordBtn = document.getElementById(
    "showPasswordBtn"
  ) as HTMLButtonElement;

  showPasswordBtn.addEventListener("click", () => {
    const type = passwordInput.type;
    const label = showPasswordBtn.textContent;

    passwordInput.type = type == "text" ? "password" : "text";
    showPasswordBtn.textContent = label == "Mostrar" ? "Ocultar" : "Mostrar";
  });
</script>
