---
import Navbar from "@/components/Navbar.astro";
import "@/styles/globals.css";

interface Props {
  title: string;
}

const { title } = Astro.props;

const pathname = Astro.url.pathname;
const isPrivateRoute = pathname.includes("/app");
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="text-white pt-6 bg-zinc-950">
    {
      isPrivateRoute ? (
        <slot />
      ) : (
        <>
          <Navbar />
          <div class="w-[800px] mx-auto mt-6">
            <slot />
          </div>
        </>
      )
    }
  </body>
</html>
